version: '3.8'

services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    environment:
      DOMAIN=https://example.com
      ENVIRONMENT=production
      PROJECT_NAME="Full Stack FastAPI Project"
      STACK_NAME=full-stack-fastapi-project
      BACKEND_CORS_ORIGINS="http://localhost,http://localhost:5173,https://localhost,https://localhost:5173,https://example.com"
      SECRET_KEY=V33xOuXoJs-7lioWd27DNw
      FIRST_SUPERUSER=devops@hng.tech
      FIRST_SUPERUSER_PASSWORD=devops#HNG11
      USERS_OPEN_REGISTRATION=True
      EMAILS_FROM_EMAIL=info@example.com
      SMTP_HOST=
      SMTP_USER=
      SMTP_PASSWORD=
      SMTP_TLS=True
      SMTP_SSL=False
      SMTP_PORT=587
      POSTGRES_SERVER=db
      POSTGRES_PORT=5432
      POSTGRES_DB=mydatabase
      POSTGRES_USER=postgres
      POSTGRES_PASSWORD=postgres
    networks:
      - app-network
    depends_on:
      - db

  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"
    networks:
      - app-network

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
      - "8090:81"
    networks:
      - app-network
    environment:
      - DISABLE_IPV6=true
    volumes:
      - nginx-proxy-manager-data:/data
      - nginx-proxy-manager-letsencrypt:/etc/letsencrypt

volumes:
  postgres-data:
  nginx-proxy-manager-data:
  nginx-proxy-manager-letsencrypt:

networks:
  app-network:
    driver: bridge
